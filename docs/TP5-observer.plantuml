Observer <|.. BarChartObserver
class CourseData [[java:observer.pattern.CourseData]] {
	-Vector<CourseRecord> courseData
	+CourseData()
	+void addCourseRecord(CourseRecord courseRecord)
	+void changeCourseRecord(String subjectName, int numOfStudents)
	+Vector<CourseRecord> getUpdate()
}
class Observable [[java:observer.pattern.Observable]] {
}
Observable <|-- CourseData
abstract class Observable [[java:observer.pattern.Observable]] {
	#Vector<Observer> observers
	+Observable()
	+void attach(Observer o)
	+void detach(Observer o)
	+void notifyObservers()
	+{abstract}Object getUpdate()
}
interface Observer [[java:observer.pattern.Observer]] {
	void update(Observable o)
}
@enduml